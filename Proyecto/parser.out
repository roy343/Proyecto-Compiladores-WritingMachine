Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SUMA
    UNTIL

Grammar

Rule 0     S' -> Start
Rule 1     Start -> code
Rule 2     code -> START DOSPUNTOS cuerpo END PUNTOCOMA procedimiento
Rule 3     cuerpo -> variable
Rule 4     cuerpo -> expresion
Rule 5     variable -> variable1 cuerpo
Rule 6     variable -> variable2 cuerpo
Rule 7     variable -> empty empty
Rule 8     variable1 -> DEF ID PUNTOCOMA
Rule 9     variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA
Rule 10    expresion -> condicion1 expresion
Rule 11    expresion -> condicion2 expresion
Rule 12    expresion -> repita expresion
Rule 13    expresion -> hacer expresion
Rule 14    expresion -> funcion expresion
Rule 15    expresion -> empty empty
Rule 16    condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA
Rule 17    cond1Aux1 -> cond1Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER
Rule 18    cond1Aux1 -> empty empty empty empty empty
Rule 19    cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2
Rule 20    cond1Aux2 -> empty empty empty empty empty empty empty empty empty
Rule 21    condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA
Rule 22    cond2Aux1 -> cond2Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER
Rule 23    cond2Aux1 -> empty empty empty empty empty
Rule 24    cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2
Rule 25    cond2Aux2 -> empty empty empty empty empty empty empty empty
Rule 26    condicion -> IGUAL
Rule 27    condicion -> MAYOR
Rule 28    condicion -> MENOR
Rule 29    condicion -> DIFERENTE
Rule 30    condicion -> MAYORIGUAL
Rule 31    condicion -> MENORIGUAL
Rule 32    sentencia -> ID
Rule 33    sentencia -> NUMERO
Rule 34    repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
Rule 35    hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
Rule 36    funcion -> Random
Rule 37    funcion -> Mover
Rule 38    funcion -> funcionAlge
Rule 39    Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
Rule 40    Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
Rule 41    paramMover -> AF
Rule 42    paramMover -> F
Rule 43    paramMover -> DFA
Rule 44    paramMover -> IFA
Rule 45    paramMover -> DFB
Rule 46    paramMover -> IFB
Rule 47    paramMover -> A
Rule 48    paramMover -> DAA
Rule 49    paramMover -> IAA
Rule 50    paramMover -> DAB
Rule 51    paramMover -> IAB
Rule 52    paramMover -> AA
Rule 53    funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 54    funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 55    funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 56    procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento
Rule 57    procedimiento -> empty empty empty empty empty empty empty empty empty empty empty
Rule 58    parametro -> ID COMA parametro
Rule 59    parametro -> ID empty empty
Rule 60    parametro -> NUMERO COMA parametro
Rule 61    parametro -> NUMERO empty empty
Rule 62    parametro -> empty empty empty
Rule 63    empty -> <empty>

Terminals, with rules where they appear

A                    : 47
AA                   : 52
AF                   : 41
COMA                 : 53 54 55 58 60
DAA                  : 48
DAB                  : 50
DEC                  : 54
DEF                  : 8 9
DEFAULT              : 9
DFA                  : 43
DFB                  : 45
DIFERENTE            : 29
DOSPUNTOS            : 2 56
END                  : 2
ENDIF                : 16 21
F                    : 42
FIN                  : 56
IAA                  : 49
IAB                  : 51
ID                   : 8 9 19 21 32 53 54 55 56 58 59
IF                   : 16 21
IFA                  : 44
IFB                  : 46
IFELSE               : 17 22
IGUAL                : 26
INC                  : 53
INI                  : 55
LLAVE_DER            : 17 19 22 24 34 35
LLAVE_IZQ            : 17 19 22 24 34 35
MAYOR                : 27
MAYORIGUAL           : 30
MENOR                : 28
MENORIGUAL           : 31
MOVER                : 40
NUMERO               : 9 33 60 61
PARA                 : 56
PARENTESIS_DER       : 39 40 53 54 55 56
PARENTESIS_IZQ       : 39 40 53 54 55 56
PROC                 : 56
PUNTOCOMA            : 2 8 9 16 21 34 35 39 40 53 54 55 56
RANDOM               : 39
REPEAT               : 34
RUN                  : 35
START                : 2
SUMA                 : 
THEN                 : 19 24
UNTIL                : 
WHILE                : 19 24
error                : 

Nonterminals, with rules where they appear

Mover                : 37
Random               : 36
Start                : 0
code                 : 1
cond1Aux1            : 16
cond1Aux2            : 17 19
cond2Aux1            : 21
cond2Aux2            : 22 24
condicion            : 19 24
condicion1           : 10
condicion2           : 11
cuerpo               : 2 5 6
empty                : 7 7 15 15 18 18 18 18 18 20 20 20 20 20 20 20 20 20 23 23 23 23 23 25 25 25 25 25 25 25 25 57 57 57 57 57 57 57 57 57 57 57 59 59 61 61 62 62 62
expresion            : 4 10 11 12 13 14 17 19 22 24 34 35 56
funcion              : 14
funcionAlge          : 38
hacer                : 13
paramMover           : 40
parametro            : 56 58 60
procedimiento        : 2 56
repita               : 12
sentencia            : 19 24 39 53 54 55
variable             : 3
variable1            : 5
variable2            : 6

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . code
    (2) code -> . START DOSPUNTOS cuerpo END PUNTOCOMA procedimiento

    START           shift and go to state 3

    Start                          shift and go to state 1
    code                           shift and go to state 2

state 1

    (0) S' -> Start .



state 2

    (1) Start -> code .

    $end            reduce using rule 1 (Start -> code .)


state 3

    (2) code -> START . DOSPUNTOS cuerpo END PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 4


state 4

    (2) code -> START DOSPUNTOS . cuerpo END PUNTOCOMA procedimiento
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (8) variable1 -> . DEF ID PUNTOCOMA
    (9) variable2 -> . DEF ID DEFAULT NUMERO PUNTOCOMA
    (63) empty -> .
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DEF             shift and go to state 16
    END             reduce using rule 63 (empty -> .)
    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    cuerpo                         shift and go to state 5
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable1                      shift and go to state 8
    variable2                      shift and go to state 9
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 5

    (2) code -> START DOSPUNTOS cuerpo . END PUNTOCOMA procedimiento

    END             shift and go to state 28


state 6

    (3) cuerpo -> variable .

    END             reduce using rule 3 (cuerpo -> variable .)


state 7

    (4) cuerpo -> expresion .

    END             reduce using rule 4 (cuerpo -> expresion .)


state 8

    (5) variable -> variable1 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (8) variable1 -> . DEF ID PUNTOCOMA
    (9) variable2 -> . DEF ID DEFAULT NUMERO PUNTOCOMA
    (63) empty -> .
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DEF             shift and go to state 16
    END             reduce using rule 63 (empty -> .)
    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    variable1                      shift and go to state 8
    cuerpo                         shift and go to state 29
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable2                      shift and go to state 9
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 9

    (6) variable -> variable2 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (8) variable1 -> . DEF ID PUNTOCOMA
    (9) variable2 -> . DEF ID DEFAULT NUMERO PUNTOCOMA
    (63) empty -> .
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DEF             shift and go to state 16
    END             reduce using rule 63 (empty -> .)
    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    variable2                      shift and go to state 9
    cuerpo                         shift and go to state 30
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable1                      shift and go to state 8
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 10

    (7) variable -> empty . empty
    (15) expresion -> empty . empty
    (63) empty -> .

    END             reduce using rule 63 (empty -> .)

    empty                          shift and go to state 31

state 11

    (10) expresion -> condicion1 . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    condicion1                     shift and go to state 11
    expresion                      shift and go to state 32
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 12

    (11) expresion -> condicion2 . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    condicion2                     shift and go to state 12
    expresion                      shift and go to state 34
    condicion1                     shift and go to state 11
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 13

    (12) expresion -> repita . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    repita                         shift and go to state 13
    expresion                      shift and go to state 35
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 14

    (13) expresion -> hacer . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    hacer                          shift and go to state 14
    expresion                      shift and go to state 36
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 15

    (14) expresion -> funcion . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    funcion                        shift and go to state 15
    expresion                      shift and go to state 37
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 16

    (8) variable1 -> DEF . ID PUNTOCOMA
    (9) variable2 -> DEF . ID DEFAULT NUMERO PUNTOCOMA

    ID              shift and go to state 38


state 17

    (16) condicion1 -> IF . cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> IF . ID cond2Aux1 ENDIF PUNTOCOMA
    (17) cond1Aux1 -> . cond1Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER
    (18) cond1Aux1 -> . empty empty empty empty empty
    (19) cond1Aux2 -> . WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (20) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    ID              shift and go to state 40
    WHILE           shift and go to state 43
    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    cond1Aux1                      shift and go to state 39
    cond1Aux2                      shift and go to state 41
    empty                          shift and go to state 42

state 18

    (34) repita -> REPEAT . LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA

    LLAVE_IZQ       shift and go to state 44


state 19

    (35) hacer -> RUN . LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA

    LLAVE_IZQ       shift and go to state 45


state 20

    (36) funcion -> Random .

    IF              reduce using rule 36 (funcion -> Random .)
    REPEAT          reduce using rule 36 (funcion -> Random .)
    RUN             reduce using rule 36 (funcion -> Random .)
    RANDOM          reduce using rule 36 (funcion -> Random .)
    MOVER           reduce using rule 36 (funcion -> Random .)
    INC             reduce using rule 36 (funcion -> Random .)
    DEC             reduce using rule 36 (funcion -> Random .)
    INI             reduce using rule 36 (funcion -> Random .)
    END             reduce using rule 36 (funcion -> Random .)
    LLAVE_DER       reduce using rule 36 (funcion -> Random .)
    FIN             reduce using rule 36 (funcion -> Random .)


state 21

    (37) funcion -> Mover .

    IF              reduce using rule 37 (funcion -> Mover .)
    REPEAT          reduce using rule 37 (funcion -> Mover .)
    RUN             reduce using rule 37 (funcion -> Mover .)
    RANDOM          reduce using rule 37 (funcion -> Mover .)
    MOVER           reduce using rule 37 (funcion -> Mover .)
    INC             reduce using rule 37 (funcion -> Mover .)
    DEC             reduce using rule 37 (funcion -> Mover .)
    INI             reduce using rule 37 (funcion -> Mover .)
    END             reduce using rule 37 (funcion -> Mover .)
    LLAVE_DER       reduce using rule 37 (funcion -> Mover .)
    FIN             reduce using rule 37 (funcion -> Mover .)


state 22

    (38) funcion -> funcionAlge .

    IF              reduce using rule 38 (funcion -> funcionAlge .)
    REPEAT          reduce using rule 38 (funcion -> funcionAlge .)
    RUN             reduce using rule 38 (funcion -> funcionAlge .)
    RANDOM          reduce using rule 38 (funcion -> funcionAlge .)
    MOVER           reduce using rule 38 (funcion -> funcionAlge .)
    INC             reduce using rule 38 (funcion -> funcionAlge .)
    DEC             reduce using rule 38 (funcion -> funcionAlge .)
    INI             reduce using rule 38 (funcion -> funcionAlge .)
    END             reduce using rule 38 (funcion -> funcionAlge .)
    LLAVE_DER       reduce using rule 38 (funcion -> funcionAlge .)
    FIN             reduce using rule 38 (funcion -> funcionAlge .)


state 23

    (39) Random -> RANDOM . PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 46


state 24

    (40) Mover -> MOVER . PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 47


state 25

    (53) funcionAlge -> INC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 48


state 26

    (54) funcionAlge -> DEC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 49


state 27

    (55) funcionAlge -> INI . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 50


state 28

    (2) code -> START DOSPUNTOS cuerpo END . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 51


state 29

    (5) variable -> variable1 cuerpo .

    END             reduce using rule 5 (variable -> variable1 cuerpo .)


state 30

    (6) variable -> variable2 cuerpo .

    END             reduce using rule 6 (variable -> variable2 cuerpo .)


state 31

    (7) variable -> empty empty .
    (15) expresion -> empty empty .

  ! reduce/reduce conflict for END resolved using rule 7 (variable -> empty empty .)
    END             reduce using rule 7 (variable -> empty empty .)

  ! END             [ reduce using rule 15 (expresion -> empty empty .) ]


state 32

    (10) expresion -> condicion1 expresion .

    END             reduce using rule 10 (expresion -> condicion1 expresion .)
    LLAVE_DER       reduce using rule 10 (expresion -> condicion1 expresion .)
    FIN             reduce using rule 10 (expresion -> condicion1 expresion .)


state 33

    (15) expresion -> empty . empty
    (63) empty -> .

    END             reduce using rule 63 (empty -> .)
    LLAVE_DER       reduce using rule 63 (empty -> .)
    FIN             reduce using rule 63 (empty -> .)

    empty                          shift and go to state 52

state 34

    (11) expresion -> condicion2 expresion .

    END             reduce using rule 11 (expresion -> condicion2 expresion .)
    LLAVE_DER       reduce using rule 11 (expresion -> condicion2 expresion .)
    FIN             reduce using rule 11 (expresion -> condicion2 expresion .)


state 35

    (12) expresion -> repita expresion .

    END             reduce using rule 12 (expresion -> repita expresion .)
    LLAVE_DER       reduce using rule 12 (expresion -> repita expresion .)
    FIN             reduce using rule 12 (expresion -> repita expresion .)


state 36

    (13) expresion -> hacer expresion .

    END             reduce using rule 13 (expresion -> hacer expresion .)
    LLAVE_DER       reduce using rule 13 (expresion -> hacer expresion .)
    FIN             reduce using rule 13 (expresion -> hacer expresion .)


state 37

    (14) expresion -> funcion expresion .

    END             reduce using rule 14 (expresion -> funcion expresion .)
    LLAVE_DER       reduce using rule 14 (expresion -> funcion expresion .)
    FIN             reduce using rule 14 (expresion -> funcion expresion .)


state 38

    (8) variable1 -> DEF ID . PUNTOCOMA
    (9) variable2 -> DEF ID . DEFAULT NUMERO PUNTOCOMA

    PUNTOCOMA       shift and go to state 53
    DEFAULT         shift and go to state 54


state 39

    (16) condicion1 -> IF cond1Aux1 . ENDIF PUNTOCOMA

    ENDIF           shift and go to state 55


state 40

    (21) condicion2 -> IF ID . cond2Aux1 ENDIF PUNTOCOMA
    (22) cond2Aux1 -> . cond2Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER
    (23) cond2Aux1 -> . empty empty empty empty empty
    (24) cond2Aux2 -> . WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (25) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (63) empty -> .

    WHILE           shift and go to state 59
    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    cond2Aux1                      shift and go to state 56
    cond2Aux2                      shift and go to state 57
    empty                          shift and go to state 58

state 41

    (17) cond1Aux1 -> cond1Aux2 . IFELSE LLAVE_IZQ expresion LLAVE_DER

    IFELSE          shift and go to state 60


state 42

    (18) cond1Aux1 -> empty . empty empty empty empty
    (20) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 61

state 43

    (19) cond1Aux2 -> WHILE . ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    ID              shift and go to state 62


state 44

    (34) repita -> REPEAT LLAVE_IZQ . expresion LLAVE_DER PUNTOCOMA
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 63
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 45

    (35) hacer -> RUN LLAVE_IZQ . expresion LLAVE_DER PUNTOCOMA
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 64
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 46

    (39) Random -> RANDOM PARENTESIS_IZQ . sentencia PARENTESIS_DER PUNTOCOMA
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 65

state 47

    (40) Mover -> MOVER PARENTESIS_IZQ . paramMover PARENTESIS_DER PUNTOCOMA
    (41) paramMover -> . AF
    (42) paramMover -> . F
    (43) paramMover -> . DFA
    (44) paramMover -> . IFA
    (45) paramMover -> . DFB
    (46) paramMover -> . IFB
    (47) paramMover -> . A
    (48) paramMover -> . DAA
    (49) paramMover -> . IAA
    (50) paramMover -> . DAB
    (51) paramMover -> . IAB
    (52) paramMover -> . AA

    AF              shift and go to state 69
    F               shift and go to state 70
    DFA             shift and go to state 71
    IFA             shift and go to state 72
    DFB             shift and go to state 73
    IFB             shift and go to state 74
    A               shift and go to state 75
    DAA             shift and go to state 76
    IAA             shift and go to state 77
    DAB             shift and go to state 78
    IAB             shift and go to state 79
    AA              shift and go to state 80

    paramMover                     shift and go to state 68

state 48

    (53) funcionAlge -> INC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 81


state 49

    (54) funcionAlge -> DEC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 82


state 50

    (55) funcionAlge -> INI PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 83


state 51

    (2) code -> START DOSPUNTOS cuerpo END PUNTOCOMA . procedimiento
    (56) procedimiento -> . PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento
    (57) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    PROC            shift and go to state 85
    $end            reduce using rule 63 (empty -> .)

    procedimiento                  shift and go to state 84
    empty                          shift and go to state 86

state 52

    (15) expresion -> empty empty .

    END             reduce using rule 15 (expresion -> empty empty .)
    LLAVE_DER       reduce using rule 15 (expresion -> empty empty .)
    FIN             reduce using rule 15 (expresion -> empty empty .)


state 53

    (8) variable1 -> DEF ID PUNTOCOMA .

    DEF             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    IF              reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    REPEAT          reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    RUN             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    RANDOM          reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    MOVER           reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    INC             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    DEC             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    INI             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)
    END             reduce using rule 8 (variable1 -> DEF ID PUNTOCOMA .)


state 54

    (9) variable2 -> DEF ID DEFAULT . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 87


state 55

    (16) condicion1 -> IF cond1Aux1 ENDIF . PUNTOCOMA

    PUNTOCOMA       shift and go to state 88


state 56

    (21) condicion2 -> IF ID cond2Aux1 . ENDIF PUNTOCOMA

    ENDIF           shift and go to state 89


state 57

    (22) cond2Aux1 -> cond2Aux2 . IFELSE LLAVE_IZQ expresion LLAVE_DER

    IFELSE          shift and go to state 90


state 58

    (23) cond2Aux1 -> empty . empty empty empty empty
    (25) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 91

state 59

    (24) cond2Aux2 -> WHILE . condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (26) condicion -> . IGUAL
    (27) condicion -> . MAYOR
    (28) condicion -> . MENOR
    (29) condicion -> . DIFERENTE
    (30) condicion -> . MAYORIGUAL
    (31) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    DIFERENTE       shift and go to state 96
    MAYORIGUAL      shift and go to state 97
    MENORIGUAL      shift and go to state 98

    condicion                      shift and go to state 92

state 60

    (17) cond1Aux1 -> cond1Aux2 IFELSE . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 99


state 61

    (18) cond1Aux1 -> empty empty . empty empty empty
    (20) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 100

state 62

    (19) cond1Aux2 -> WHILE ID . condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (26) condicion -> . IGUAL
    (27) condicion -> . MAYOR
    (28) condicion -> . MENOR
    (29) condicion -> . DIFERENTE
    (30) condicion -> . MAYORIGUAL
    (31) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 93
    MAYOR           shift and go to state 94
    MENOR           shift and go to state 95
    DIFERENTE       shift and go to state 96
    MAYORIGUAL      shift and go to state 97
    MENORIGUAL      shift and go to state 98

    condicion                      shift and go to state 101

state 63

    (34) repita -> REPEAT LLAVE_IZQ expresion . LLAVE_DER PUNTOCOMA

    LLAVE_DER       shift and go to state 102


state 64

    (35) hacer -> RUN LLAVE_IZQ expresion . LLAVE_DER PUNTOCOMA

    LLAVE_DER       shift and go to state 103


state 65

    (39) Random -> RANDOM PARENTESIS_IZQ sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 104


state 66

    (32) sentencia -> ID .

    PARENTESIS_DER  reduce using rule 32 (sentencia -> ID .)
    THEN            reduce using rule 32 (sentencia -> ID .)


state 67

    (33) sentencia -> NUMERO .

    PARENTESIS_DER  reduce using rule 33 (sentencia -> NUMERO .)
    THEN            reduce using rule 33 (sentencia -> NUMERO .)


state 68

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 105


state 69

    (41) paramMover -> AF .

    PARENTESIS_DER  reduce using rule 41 (paramMover -> AF .)


state 70

    (42) paramMover -> F .

    PARENTESIS_DER  reduce using rule 42 (paramMover -> F .)


state 71

    (43) paramMover -> DFA .

    PARENTESIS_DER  reduce using rule 43 (paramMover -> DFA .)


state 72

    (44) paramMover -> IFA .

    PARENTESIS_DER  reduce using rule 44 (paramMover -> IFA .)


state 73

    (45) paramMover -> DFB .

    PARENTESIS_DER  reduce using rule 45 (paramMover -> DFB .)


state 74

    (46) paramMover -> IFB .

    PARENTESIS_DER  reduce using rule 46 (paramMover -> IFB .)


state 75

    (47) paramMover -> A .

    PARENTESIS_DER  reduce using rule 47 (paramMover -> A .)


state 76

    (48) paramMover -> DAA .

    PARENTESIS_DER  reduce using rule 48 (paramMover -> DAA .)


state 77

    (49) paramMover -> IAA .

    PARENTESIS_DER  reduce using rule 49 (paramMover -> IAA .)


state 78

    (50) paramMover -> DAB .

    PARENTESIS_DER  reduce using rule 50 (paramMover -> DAB .)


state 79

    (51) paramMover -> IAB .

    PARENTESIS_DER  reduce using rule 51 (paramMover -> IAB .)


state 80

    (52) paramMover -> AA .

    PARENTESIS_DER  reduce using rule 52 (paramMover -> AA .)


state 81

    (53) funcionAlge -> INC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 106


state 82

    (54) funcionAlge -> DEC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 107


state 83

    (55) funcionAlge -> INI PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 108


state 84

    (2) code -> START DOSPUNTOS cuerpo END PUNTOCOMA procedimiento .

    $end            reduce using rule 2 (code -> START DOSPUNTOS cuerpo END PUNTOCOMA procedimiento .)


state 85

    (56) procedimiento -> PROC . ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento

    ID              shift and go to state 109


state 86

    (57) procedimiento -> empty . empty empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 110

state 87

    (9) variable2 -> DEF ID DEFAULT NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 111


state 88

    (16) condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .

    IF              reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    REPEAT          reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    RUN             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    RANDOM          reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    MOVER           reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    INC             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    DEC             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    INI             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    END             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    LLAVE_DER       reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)
    FIN             reduce using rule 16 (condicion1 -> IF cond1Aux1 ENDIF PUNTOCOMA .)


state 89

    (21) condicion2 -> IF ID cond2Aux1 ENDIF . PUNTOCOMA

    PUNTOCOMA       shift and go to state 112


state 90

    (22) cond2Aux1 -> cond2Aux2 IFELSE . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 113


state 91

    (23) cond2Aux1 -> empty empty . empty empty empty
    (25) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 114

state 92

    (24) cond2Aux2 -> WHILE condicion . sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 115

state 93

    (26) condicion -> IGUAL .

    ID              reduce using rule 26 (condicion -> IGUAL .)
    NUMERO          reduce using rule 26 (condicion -> IGUAL .)


state 94

    (27) condicion -> MAYOR .

    ID              reduce using rule 27 (condicion -> MAYOR .)
    NUMERO          reduce using rule 27 (condicion -> MAYOR .)


state 95

    (28) condicion -> MENOR .

    ID              reduce using rule 28 (condicion -> MENOR .)
    NUMERO          reduce using rule 28 (condicion -> MENOR .)


state 96

    (29) condicion -> DIFERENTE .

    ID              reduce using rule 29 (condicion -> DIFERENTE .)
    NUMERO          reduce using rule 29 (condicion -> DIFERENTE .)


state 97

    (30) condicion -> MAYORIGUAL .

    ID              reduce using rule 30 (condicion -> MAYORIGUAL .)
    NUMERO          reduce using rule 30 (condicion -> MAYORIGUAL .)


state 98

    (31) condicion -> MENORIGUAL .

    ID              reduce using rule 31 (condicion -> MENORIGUAL .)
    NUMERO          reduce using rule 31 (condicion -> MENORIGUAL .)


state 99

    (17) cond1Aux1 -> cond1Aux2 IFELSE LLAVE_IZQ . expresion LLAVE_DER
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 116
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 100

    (18) cond1Aux1 -> empty empty empty . empty empty
    (20) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 117

state 101

    (19) cond1Aux2 -> WHILE ID condicion . sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 118

state 102

    (34) repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 119


state 103

    (35) hacer -> RUN LLAVE_IZQ expresion LLAVE_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 120


state 104

    (39) Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 121


state 105

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 122


state 106

    (53) funcionAlge -> INC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 123

state 107

    (54) funcionAlge -> DEC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 124

state 108

    (55) funcionAlge -> INI PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (32) sentencia -> . ID
    (33) sentencia -> . NUMERO

    ID              shift and go to state 66
    NUMERO          shift and go to state 67

    sentencia                      shift and go to state 125

state 109

    (56) procedimiento -> PROC ID . PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento

    PARENTESIS_IZQ  shift and go to state 126


state 110

    (57) procedimiento -> empty empty . empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 127

state 111

    (9) variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .

    DEF             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    IF              reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    REPEAT          reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    RUN             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    RANDOM          reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    MOVER           reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    INC             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    DEC             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    INI             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)
    END             reduce using rule 9 (variable2 -> DEF ID DEFAULT NUMERO PUNTOCOMA .)


state 112

    (21) condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .

    IF              reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    REPEAT          reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    RUN             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    RANDOM          reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    MOVER           reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    INC             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    DEC             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    INI             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    END             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    LLAVE_DER       reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)
    FIN             reduce using rule 21 (condicion2 -> IF ID cond2Aux1 ENDIF PUNTOCOMA .)


state 113

    (22) cond2Aux1 -> cond2Aux2 IFELSE LLAVE_IZQ . expresion LLAVE_DER
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 128
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 114

    (23) cond2Aux1 -> empty empty empty . empty empty
    (25) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 129

state 115

    (24) cond2Aux2 -> WHILE condicion sentencia . THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    THEN            shift and go to state 130


state 116

    (17) cond1Aux1 -> cond1Aux2 IFELSE LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 131


state 117

    (18) cond1Aux1 -> empty empty empty empty . empty
    (20) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 132

state 118

    (19) cond1Aux2 -> WHILE ID condicion sentencia . THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    THEN            shift and go to state 133


state 119

    (34) repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .

    IF              reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    REPEAT          reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    RUN             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    RANDOM          reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    MOVER           reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    INC             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    DEC             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    INI             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    END             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    FIN             reduce using rule 34 (repita -> REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)


state 120

    (35) hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .

    IF              reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    REPEAT          reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    RUN             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    RANDOM          reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    MOVER           reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    INC             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    DEC             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    INI             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    END             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)
    FIN             reduce using rule 35 (hacer -> RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA .)


state 121

    (39) Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .

    IF              reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    REPEAT          reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    RUN             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    RANDOM          reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    END             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 39 (Random -> RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA .)


state 122

    (40) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .

    IF              reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    REPEAT          reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    RUN             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    RANDOM          reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    END             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 40 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)


state 123

    (53) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 134


state 124

    (54) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 135


state 125

    (55) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 136


state 126

    (56) procedimiento -> PROC ID PARENTESIS_IZQ . parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento
    (58) parametro -> . ID COMA parametro
    (59) parametro -> . ID empty empty
    (60) parametro -> . NUMERO COMA parametro
    (61) parametro -> . NUMERO empty empty
    (62) parametro -> . empty empty empty
    (63) empty -> .

    ID              shift and go to state 137
    NUMERO          shift and go to state 140
    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    parametro                      shift and go to state 138
    empty                          shift and go to state 139

state 127

    (57) procedimiento -> empty empty empty . empty empty empty empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 141

state 128

    (22) cond2Aux1 -> cond2Aux2 IFELSE LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 142


state 129

    (23) cond2Aux1 -> empty empty empty empty . empty
    (25) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 63 (empty -> .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 143

state 130

    (24) cond2Aux2 -> WHILE condicion sentencia THEN . LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    LLAVE_IZQ       shift and go to state 144


state 131

    (17) cond1Aux1 -> cond1Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER .

    ENDIF           reduce using rule 17 (cond1Aux1 -> cond1Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER .)


state 132

    (18) cond1Aux1 -> empty empty empty empty empty .
    (20) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 18 (cond1Aux1 -> empty empty empty empty empty .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 145

state 133

    (19) cond1Aux2 -> WHILE ID condicion sentencia THEN . LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    LLAVE_IZQ       shift and go to state 146


state 134

    (53) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 147


state 135

    (54) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 148


state 136

    (55) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 149


state 137

    (58) parametro -> ID . COMA parametro
    (59) parametro -> ID . empty empty
    (63) empty -> .

    COMA            shift and go to state 150
    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 151

state 138

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro . PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento

    PARENTESIS_DER  shift and go to state 152


state 139

    (62) parametro -> empty . empty empty
    (63) empty -> .

    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 153

state 140

    (60) parametro -> NUMERO . COMA parametro
    (61) parametro -> NUMERO . empty empty
    (63) empty -> .

    COMA            shift and go to state 154
    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 155

state 141

    (57) procedimiento -> empty empty empty empty . empty empty empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 156

state 142

    (22) cond2Aux1 -> cond2Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER .

    ENDIF           reduce using rule 22 (cond2Aux1 -> cond2Aux2 IFELSE LLAVE_IZQ expresion LLAVE_DER .)


state 143

    (23) cond2Aux1 -> empty empty empty empty empty .
    (25) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (63) empty -> .

    ENDIF           reduce using rule 23 (cond2Aux1 -> empty empty empty empty empty .)
    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 157

state 144

    (24) cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ . expresion LLAVE_DER cond2Aux2
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 158
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 145

    (20) cond1Aux2 -> empty empty empty empty empty empty . empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 159

state 146

    (19) cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ . expresion LLAVE_DER cond1Aux2
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    LLAVE_DER       reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 160
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 147

    (53) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    IF              reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPEAT          reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RUN             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RANDOM          reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    END             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 53 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 148

    (54) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    IF              reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPEAT          reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RUN             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RANDOM          reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    END             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 54 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 149

    (55) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    IF              reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPEAT          reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RUN             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    RANDOM          reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    END             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 55 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 150

    (58) parametro -> ID COMA . parametro
    (58) parametro -> . ID COMA parametro
    (59) parametro -> . ID empty empty
    (60) parametro -> . NUMERO COMA parametro
    (61) parametro -> . NUMERO empty empty
    (62) parametro -> . empty empty empty
    (63) empty -> .

    ID              shift and go to state 137
    NUMERO          shift and go to state 140
    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    parametro                      shift and go to state 161
    empty                          shift and go to state 139

state 151

    (59) parametro -> ID empty . empty
    (63) empty -> .

    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 162

state 152

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER . PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento

    PARA            shift and go to state 163


state 153

    (62) parametro -> empty empty . empty
    (63) empty -> .

    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 164

state 154

    (60) parametro -> NUMERO COMA . parametro
    (58) parametro -> . ID COMA parametro
    (59) parametro -> . ID empty empty
    (60) parametro -> . NUMERO COMA parametro
    (61) parametro -> . NUMERO empty empty
    (62) parametro -> . empty empty empty
    (63) empty -> .

    ID              shift and go to state 137
    NUMERO          shift and go to state 140
    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    parametro                      shift and go to state 165
    empty                          shift and go to state 139

state 155

    (61) parametro -> NUMERO empty . empty
    (63) empty -> .

    PARENTESIS_DER  reduce using rule 63 (empty -> .)

    empty                          shift and go to state 166

state 156

    (57) procedimiento -> empty empty empty empty empty . empty empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 167

state 157

    (25) cond2Aux2 -> empty empty empty empty empty empty . empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 168

state 158

    (24) cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ expresion . LLAVE_DER cond2Aux2

    LLAVE_DER       shift and go to state 169


state 159

    (20) cond1Aux2 -> empty empty empty empty empty empty empty . empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 170

state 160

    (19) cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ expresion . LLAVE_DER cond1Aux2

    LLAVE_DER       shift and go to state 171


state 161

    (58) parametro -> ID COMA parametro .

    PARENTESIS_DER  reduce using rule 58 (parametro -> ID COMA parametro .)


state 162

    (59) parametro -> ID empty empty .

    PARENTESIS_DER  reduce using rule 59 (parametro -> ID empty empty .)


state 163

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA . DOSPUNTOS expresion FIN PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 172


state 164

    (62) parametro -> empty empty empty .

    PARENTESIS_DER  reduce using rule 62 (parametro -> empty empty empty .)


state 165

    (60) parametro -> NUMERO COMA parametro .

    PARENTESIS_DER  reduce using rule 60 (parametro -> NUMERO COMA parametro .)


state 166

    (61) parametro -> NUMERO empty empty .

    PARENTESIS_DER  reduce using rule 61 (parametro -> NUMERO empty empty .)


state 167

    (57) procedimiento -> empty empty empty empty empty empty . empty empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 173

state 168

    (25) cond2Aux2 -> empty empty empty empty empty empty empty . empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 174

state 169

    (24) cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER . cond2Aux2
    (24) cond2Aux2 -> . WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (25) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (63) empty -> .

    WHILE           shift and go to state 59
    IFELSE          reduce using rule 63 (empty -> .)

    cond2Aux2                      shift and go to state 175
    empty                          shift and go to state 176

state 170

    (20) cond1Aux2 -> empty empty empty empty empty empty empty empty . empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 177

state 171

    (19) cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER . cond1Aux2
    (19) cond1Aux2 -> . WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (20) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    WHILE           shift and go to state 43
    IFELSE          reduce using rule 63 (empty -> .)

    cond1Aux2                      shift and go to state 178
    empty                          shift and go to state 179

state 172

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS . expresion FIN PUNTOCOMA procedimiento
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . empty empty
    (16) condicion1 -> . IF cond1Aux1 ENDIF PUNTOCOMA
    (21) condicion2 -> . IF ID cond2Aux1 ENDIF PUNTOCOMA
    (34) repita -> . REPEAT LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (35) hacer -> . RUN LLAVE_IZQ expresion LLAVE_DER PUNTOCOMA
    (36) funcion -> . Random
    (37) funcion -> . Mover
    (38) funcion -> . funcionAlge
    (63) empty -> .
    (39) Random -> . RANDOM PARENTESIS_IZQ sentencia PARENTESIS_DER PUNTOCOMA
    (40) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (53) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    IF              shift and go to state 17
    REPEAT          shift and go to state 18
    RUN             shift and go to state 19
    FIN             reduce using rule 63 (empty -> .)
    RANDOM          shift and go to state 23
    MOVER           shift and go to state 24
    INC             shift and go to state 25
    DEC             shift and go to state 26
    INI             shift and go to state 27

    expresion                      shift and go to state 180
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 33
    Random                         shift and go to state 20
    Mover                          shift and go to state 21
    funcionAlge                    shift and go to state 22

state 173

    (57) procedimiento -> empty empty empty empty empty empty empty . empty empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 181

state 174

    (25) cond2Aux2 -> empty empty empty empty empty empty empty empty .

    IFELSE          reduce using rule 25 (cond2Aux2 -> empty empty empty empty empty empty empty empty .)


state 175

    (24) cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .

    IFELSE          reduce using rule 24 (cond2Aux2 -> WHILE condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .)


state 176

    (25) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 182

state 177

    (20) cond1Aux2 -> empty empty empty empty empty empty empty empty empty .

    IFELSE          reduce using rule 20 (cond1Aux2 -> empty empty empty empty empty empty empty empty empty .)


state 178

    (19) cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .

    IFELSE          reduce using rule 19 (cond1Aux2 -> WHILE ID condicion sentencia THEN LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .)


state 179

    (20) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 183

state 180

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion . FIN PUNTOCOMA procedimiento

    FIN             shift and go to state 184


state 181

    (57) procedimiento -> empty empty empty empty empty empty empty empty . empty empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 185

state 182

    (25) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 186

state 183

    (20) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 187

state 184

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 188


state 185

    (57) procedimiento -> empty empty empty empty empty empty empty empty empty . empty empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 189

state 186

    (25) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 190

state 187

    (20) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 191

state 188

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA . procedimiento
    (56) procedimiento -> . PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento
    (57) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (63) empty -> .

    PROC            shift and go to state 85
    $end            reduce using rule 63 (empty -> .)

    procedimiento                  shift and go to state 192
    empty                          shift and go to state 86

state 189

    (57) procedimiento -> empty empty empty empty empty empty empty empty empty empty . empty
    (63) empty -> .

    $end            reduce using rule 63 (empty -> .)

    empty                          shift and go to state 193

state 190

    (25) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 194

state 191

    (20) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 195

state 192

    (56) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento .

    $end            reduce using rule 56 (procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER PARA DOSPUNTOS expresion FIN PUNTOCOMA procedimiento .)


state 193

    (57) procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .

    $end            reduce using rule 57 (procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .)


state 194

    (25) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 157

state 195

    (20) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (63) empty -> .

    IFELSE          reduce using rule 63 (empty -> .)

    empty                          shift and go to state 145
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 31 resolved using rule (variable -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 31
