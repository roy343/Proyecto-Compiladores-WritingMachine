Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    SUMA

Grammar

Rule 0     S' -> Start
Rule 1     Start -> code
Rule 2     code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento
Rule 3     cuerpo -> variable
Rule 4     cuerpo -> expresion
Rule 5     variable -> variable1 cuerpo
Rule 6     variable -> variable2 cuerpo
Rule 7     variable -> empty empty
Rule 8     variable1 -> DCL ID PUNTOCOMA
Rule 9     variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA
Rule 10    expresion -> condicion1 expresion
Rule 11    expresion -> condicion2 expresion
Rule 12    expresion -> repita expresion
Rule 13    expresion -> hacer expresion
Rule 14    expresion -> funcion expresion
Rule 15    expresion -> llamarProc expresion
Rule 16    expresion -> empty empty
Rule 17    condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA
Rule 18    cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
Rule 19    cond1Aux1 -> empty empty empty empty empty
Rule 20    cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
Rule 21    cond1Aux2 -> empty empty empty empty empty empty empty empty empty
Rule 22    condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
Rule 23    cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
Rule 24    cond2Aux1 -> empty empty empty empty empty
Rule 25    cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
Rule 26    cond2Aux2 -> empty empty empty empty empty empty empty empty
Rule 27    condicion -> IGUAL
Rule 28    condicion -> MAYOR
Rule 29    condicion -> MENOR
Rule 30    condicion -> DIFERENTE
Rule 31    condicion -> MAYORIGUAL
Rule 32    condicion -> MENORIGUAL
Rule 33    sentencia -> ID
Rule 34    sentencia -> NUMERO
Rule 35    repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
Rule 36    hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
Rule 37    funcion -> Aleatorio
Rule 38    funcion -> Mover
Rule 39    funcion -> funcionAlge
Rule 40    Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
Rule 41    Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
Rule 42    paramMover -> AF
Rule 43    paramMover -> F
Rule 44    paramMover -> DFA
Rule 45    paramMover -> IFA
Rule 46    paramMover -> DFB
Rule 47    paramMover -> IFB
Rule 48    paramMover -> A
Rule 49    paramMover -> DAA
Rule 50    paramMover -> IAA
Rule 51    paramMover -> DAB
Rule 52    paramMover -> IAB
Rule 53    paramMover -> AA
Rule 54    funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 55    funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 56    funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
Rule 57    procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
Rule 58    procedimiento -> empty empty empty empty empty empty empty empty empty empty empty
Rule 59    parametro -> ID COMA parametro
Rule 60    parametro -> ID empty empty
Rule 61    parametro -> NUMERO COMA parametro
Rule 62    parametro -> NUMERO empty empty
Rule 63    parametro -> empty empty empty
Rule 64    llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
Rule 65    empty -> <empty>

Terminals, with rules where they appear

A                    : 48
AA                   : 53
AF                   : 42
ALEATORIO            : 40
COMA                 : 54 55 56 59 61
CUANDO               : 20 25
DAA                  : 49
DAB                  : 51
DCL                  : 8 9
DEC                  : 55
DEFAULT              : 9
DESDE                : 36
DFA                  : 44
DFB                  : 46
DIFERENTE            : 30
DOSPUNTOS            : 2 57
ENCASO               : 17 22
ENTONS               : 20 25
F                    : 43
FIN                  : 2
FINDESDE             : 36
FINENCASO            : 17 22
FINPROC              : 57
HAGA                 : 36
HASTA                : 36
HASTAENCONTRAR       : 35
IAA                  : 50
IAB                  : 52
ID                   : 8 9 20 22 33 35 36 54 55 56 57 59 60 64
IFA                  : 45
IFB                  : 47
IGUAL                : 27 36
INC                  : 54
INI                  : 56
INICIO               : 2
INICIOPROC           : 57
LLAMAR               : 64
LLAVE_DER            : 18 20 23 25 35 36
LLAVE_IZQ            : 18 20 23 25 35 36
MAYOR                : 28
MAYORIGUAL           : 31
MENOR                : 29
MENORIGUAL           : 32
MOVER                : 41
NUMERO               : 9 34 61 62
PARENTESIS_DER       : 40 41 54 55 56 57 64
PARENTESIS_IZQ       : 40 41 54 55 56 57 64
PROC                 : 57
PUNTOCOMA            : 2 8 9 17 22 35 36 40 41 54 55 56 57 64
REPITA               : 35
SINO                 : 18 23
SUMA                 : 
error                : 

Nonterminals, with rules where they appear

Aleatorio            : 37
Mover                : 38
Start                : 0
code                 : 1
cond1Aux1            : 17
cond1Aux2            : 18 20
cond2Aux1            : 22
cond2Aux2            : 23 25
condicion            : 20 25 35
condicion1           : 10
condicion2           : 11
cuerpo               : 2 5 6
empty                : 7 7 16 16 19 19 19 19 19 21 21 21 21 21 21 21 21 21 24 24 24 24 24 26 26 26 26 26 26 26 26 58 58 58 58 58 58 58 58 58 58 58 60 60 62 62 63 63 63
expresion            : 4 10 11 12 13 14 15 18 20 23 25 35 36 57
funcion              : 14
funcionAlge          : 39
hacer                : 13
llamarProc           : 15
paramMover           : 41
parametro            : 57 59 61 64
procedimiento        : 2 57
repita               : 12
sentencia            : 20 25 35 36 36 54 55 56
variable             : 3
variable1            : 5
variable2            : 6

Parsing method: LALR

state 0

    (0) S' -> . Start
    (1) Start -> . code
    (2) code -> . INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento

    INICIO          shift and go to state 3

    Start                          shift and go to state 1
    code                           shift and go to state 2

state 1

    (0) S' -> Start .



state 2

    (1) Start -> code .

    $end            reduce using rule 1 (Start -> code .)


state 3

    (2) code -> INICIO . DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 4


state 4

    (2) code -> INICIO DOSPUNTOS . cuerpo FIN PUNTOCOMA procedimiento
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (8) variable1 -> . DCL ID PUNTOCOMA
    (9) variable2 -> . DCL ID DEFAULT NUMERO PUNTOCOMA
    (65) empty -> .
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 17
    FIN             reduce using rule 65 (empty -> .)
    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    cuerpo                         shift and go to state 5
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable1                      shift and go to state 8
    variable2                      shift and go to state 9
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 5

    (2) code -> INICIO DOSPUNTOS cuerpo . FIN PUNTOCOMA procedimiento

    FIN             shift and go to state 30


state 6

    (3) cuerpo -> variable .

    FIN             reduce using rule 3 (cuerpo -> variable .)


state 7

    (4) cuerpo -> expresion .

    FIN             reduce using rule 4 (cuerpo -> expresion .)


state 8

    (5) variable -> variable1 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (8) variable1 -> . DCL ID PUNTOCOMA
    (9) variable2 -> . DCL ID DEFAULT NUMERO PUNTOCOMA
    (65) empty -> .
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 17
    FIN             reduce using rule 65 (empty -> .)
    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    variable1                      shift and go to state 8
    cuerpo                         shift and go to state 31
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable2                      shift and go to state 9
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 9

    (6) variable -> variable2 . cuerpo
    (3) cuerpo -> . variable
    (4) cuerpo -> . expresion
    (5) variable -> . variable1 cuerpo
    (6) variable -> . variable2 cuerpo
    (7) variable -> . empty empty
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (8) variable1 -> . DCL ID PUNTOCOMA
    (9) variable2 -> . DCL ID DEFAULT NUMERO PUNTOCOMA
    (65) empty -> .
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    DCL             shift and go to state 17
    FIN             reduce using rule 65 (empty -> .)
    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    variable2                      shift and go to state 9
    cuerpo                         shift and go to state 32
    variable                       shift and go to state 6
    expresion                      shift and go to state 7
    variable1                      shift and go to state 8
    empty                          shift and go to state 10
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 10

    (7) variable -> empty . empty
    (16) expresion -> empty . empty
    (65) empty -> .

    FIN             reduce using rule 65 (empty -> .)

    empty                          shift and go to state 33

state 11

    (10) expresion -> condicion1 . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    condicion1                     shift and go to state 11
    expresion                      shift and go to state 34
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 12

    (11) expresion -> condicion2 . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    condicion2                     shift and go to state 12
    expresion                      shift and go to state 36
    condicion1                     shift and go to state 11
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 13

    (12) expresion -> repita . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    repita                         shift and go to state 13
    expresion                      shift and go to state 37
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 14

    (13) expresion -> hacer . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    hacer                          shift and go to state 14
    expresion                      shift and go to state 38
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 15

    (14) expresion -> funcion . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    funcion                        shift and go to state 15
    expresion                      shift and go to state 39
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 16

    (15) expresion -> llamarProc . expresion
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    llamarProc                     shift and go to state 16
    expresion                      shift and go to state 40
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 17

    (8) variable1 -> DCL . ID PUNTOCOMA
    (9) variable2 -> DCL . ID DEFAULT NUMERO PUNTOCOMA

    ID              shift and go to state 41


state 18

    (17) condicion1 -> ENCASO . cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> ENCASO . ID cond2Aux1 FINENCASO PUNTOCOMA
    (18) cond1Aux1 -> . cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
    (19) cond1Aux1 -> . empty empty empty empty empty
    (20) cond1Aux2 -> . CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (21) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    ID              shift and go to state 43
    CUANDO          shift and go to state 46
    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    cond1Aux1                      shift and go to state 42
    cond1Aux2                      shift and go to state 44
    empty                          shift and go to state 45

state 19

    (35) repita -> REPITA . LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    LLAVE_IZQ       shift and go to state 47


state 20

    (36) hacer -> DESDE . ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    ID              shift and go to state 48


state 21

    (37) funcion -> Aleatorio .

    ENCASO          reduce using rule 37 (funcion -> Aleatorio .)
    REPITA          reduce using rule 37 (funcion -> Aleatorio .)
    DESDE           reduce using rule 37 (funcion -> Aleatorio .)
    LLAMAR          reduce using rule 37 (funcion -> Aleatorio .)
    ALEATORIO       reduce using rule 37 (funcion -> Aleatorio .)
    MOVER           reduce using rule 37 (funcion -> Aleatorio .)
    INC             reduce using rule 37 (funcion -> Aleatorio .)
    DEC             reduce using rule 37 (funcion -> Aleatorio .)
    INI             reduce using rule 37 (funcion -> Aleatorio .)
    FIN             reduce using rule 37 (funcion -> Aleatorio .)
    LLAVE_DER       reduce using rule 37 (funcion -> Aleatorio .)
    FINPROC         reduce using rule 37 (funcion -> Aleatorio .)


state 22

    (38) funcion -> Mover .

    ENCASO          reduce using rule 38 (funcion -> Mover .)
    REPITA          reduce using rule 38 (funcion -> Mover .)
    DESDE           reduce using rule 38 (funcion -> Mover .)
    LLAMAR          reduce using rule 38 (funcion -> Mover .)
    ALEATORIO       reduce using rule 38 (funcion -> Mover .)
    MOVER           reduce using rule 38 (funcion -> Mover .)
    INC             reduce using rule 38 (funcion -> Mover .)
    DEC             reduce using rule 38 (funcion -> Mover .)
    INI             reduce using rule 38 (funcion -> Mover .)
    FIN             reduce using rule 38 (funcion -> Mover .)
    LLAVE_DER       reduce using rule 38 (funcion -> Mover .)
    FINPROC         reduce using rule 38 (funcion -> Mover .)


state 23

    (39) funcion -> funcionAlge .

    ENCASO          reduce using rule 39 (funcion -> funcionAlge .)
    REPITA          reduce using rule 39 (funcion -> funcionAlge .)
    DESDE           reduce using rule 39 (funcion -> funcionAlge .)
    LLAMAR          reduce using rule 39 (funcion -> funcionAlge .)
    ALEATORIO       reduce using rule 39 (funcion -> funcionAlge .)
    MOVER           reduce using rule 39 (funcion -> funcionAlge .)
    INC             reduce using rule 39 (funcion -> funcionAlge .)
    DEC             reduce using rule 39 (funcion -> funcionAlge .)
    INI             reduce using rule 39 (funcion -> funcionAlge .)
    FIN             reduce using rule 39 (funcion -> funcionAlge .)
    LLAVE_DER       reduce using rule 39 (funcion -> funcionAlge .)
    FINPROC         reduce using rule 39 (funcion -> funcionAlge .)


state 24

    (64) llamarProc -> LLAMAR . ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 49


state 25

    (40) Aleatorio -> ALEATORIO . PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 50


state 26

    (41) Mover -> MOVER . PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 51


state 27

    (54) funcionAlge -> INC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 52


state 28

    (55) funcionAlge -> DEC . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 53


state 29

    (56) funcionAlge -> INI . PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 54


state 30

    (2) code -> INICIO DOSPUNTOS cuerpo FIN . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 55


state 31

    (5) variable -> variable1 cuerpo .

    FIN             reduce using rule 5 (variable -> variable1 cuerpo .)


state 32

    (6) variable -> variable2 cuerpo .

    FIN             reduce using rule 6 (variable -> variable2 cuerpo .)


state 33

    (7) variable -> empty empty .
    (16) expresion -> empty empty .

  ! reduce/reduce conflict for FIN resolved using rule 7 (variable -> empty empty .)
    FIN             reduce using rule 7 (variable -> empty empty .)

  ! FIN             [ reduce using rule 16 (expresion -> empty empty .) ]


state 34

    (10) expresion -> condicion1 expresion .

    FIN             reduce using rule 10 (expresion -> condicion1 expresion .)
    LLAVE_DER       reduce using rule 10 (expresion -> condicion1 expresion .)
    FINPROC         reduce using rule 10 (expresion -> condicion1 expresion .)


state 35

    (16) expresion -> empty . empty
    (65) empty -> .

    FIN             reduce using rule 65 (empty -> .)
    LLAVE_DER       reduce using rule 65 (empty -> .)
    FINPROC         reduce using rule 65 (empty -> .)

    empty                          shift and go to state 56

state 36

    (11) expresion -> condicion2 expresion .

    FIN             reduce using rule 11 (expresion -> condicion2 expresion .)
    LLAVE_DER       reduce using rule 11 (expresion -> condicion2 expresion .)
    FINPROC         reduce using rule 11 (expresion -> condicion2 expresion .)


state 37

    (12) expresion -> repita expresion .

    FIN             reduce using rule 12 (expresion -> repita expresion .)
    LLAVE_DER       reduce using rule 12 (expresion -> repita expresion .)
    FINPROC         reduce using rule 12 (expresion -> repita expresion .)


state 38

    (13) expresion -> hacer expresion .

    FIN             reduce using rule 13 (expresion -> hacer expresion .)
    LLAVE_DER       reduce using rule 13 (expresion -> hacer expresion .)
    FINPROC         reduce using rule 13 (expresion -> hacer expresion .)


state 39

    (14) expresion -> funcion expresion .

    FIN             reduce using rule 14 (expresion -> funcion expresion .)
    LLAVE_DER       reduce using rule 14 (expresion -> funcion expresion .)
    FINPROC         reduce using rule 14 (expresion -> funcion expresion .)


state 40

    (15) expresion -> llamarProc expresion .

    FIN             reduce using rule 15 (expresion -> llamarProc expresion .)
    LLAVE_DER       reduce using rule 15 (expresion -> llamarProc expresion .)
    FINPROC         reduce using rule 15 (expresion -> llamarProc expresion .)


state 41

    (8) variable1 -> DCL ID . PUNTOCOMA
    (9) variable2 -> DCL ID . DEFAULT NUMERO PUNTOCOMA

    PUNTOCOMA       shift and go to state 57
    DEFAULT         shift and go to state 58


state 42

    (17) condicion1 -> ENCASO cond1Aux1 . FINENCASO PUNTOCOMA

    FINENCASO       shift and go to state 59


state 43

    (22) condicion2 -> ENCASO ID . cond2Aux1 FINENCASO PUNTOCOMA
    (23) cond2Aux1 -> . cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER
    (24) cond2Aux1 -> . empty empty empty empty empty
    (25) cond2Aux2 -> . CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (26) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (65) empty -> .

    CUANDO          shift and go to state 63
    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    cond2Aux1                      shift and go to state 60
    cond2Aux2                      shift and go to state 61
    empty                          shift and go to state 62

state 44

    (18) cond1Aux1 -> cond1Aux2 . SINO LLAVE_IZQ expresion LLAVE_DER

    SINO            shift and go to state 64


state 45

    (19) cond1Aux1 -> empty . empty empty empty empty
    (21) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 65

state 46

    (20) cond1Aux2 -> CUANDO . ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    ID              shift and go to state 66


state 47

    (35) repita -> REPITA LLAVE_IZQ . expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 67
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 48

    (36) hacer -> DESDE ID . IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    IGUAL           shift and go to state 68


state 49

    (64) llamarProc -> LLAMAR ID . PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA

    PARENTESIS_IZQ  shift and go to state 69


state 50

    (40) Aleatorio -> ALEATORIO PARENTESIS_IZQ . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 70


state 51

    (41) Mover -> MOVER PARENTESIS_IZQ . paramMover PARENTESIS_DER PUNTOCOMA
    (42) paramMover -> . AF
    (43) paramMover -> . F
    (44) paramMover -> . DFA
    (45) paramMover -> . IFA
    (46) paramMover -> . DFB
    (47) paramMover -> . IFB
    (48) paramMover -> . A
    (49) paramMover -> . DAA
    (50) paramMover -> . IAA
    (51) paramMover -> . DAB
    (52) paramMover -> . IAB
    (53) paramMover -> . AA

    AF              shift and go to state 72
    F               shift and go to state 73
    DFA             shift and go to state 74
    IFA             shift and go to state 75
    DFB             shift and go to state 76
    IFB             shift and go to state 77
    A               shift and go to state 78
    DAA             shift and go to state 79
    IAA             shift and go to state 80
    DAB             shift and go to state 81
    IAB             shift and go to state 82
    AA              shift and go to state 83

    paramMover                     shift and go to state 71

state 52

    (54) funcionAlge -> INC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 84


state 53

    (55) funcionAlge -> DEC PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 85


state 54

    (56) funcionAlge -> INI PARENTESIS_IZQ . ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ID              shift and go to state 86


state 55

    (2) code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA . procedimiento
    (57) procedimiento -> . PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
    (58) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    PROC            shift and go to state 88
    $end            reduce using rule 65 (empty -> .)

    procedimiento                  shift and go to state 87
    empty                          shift and go to state 89

state 56

    (16) expresion -> empty empty .

    FIN             reduce using rule 16 (expresion -> empty empty .)
    LLAVE_DER       reduce using rule 16 (expresion -> empty empty .)
    FINPROC         reduce using rule 16 (expresion -> empty empty .)


state 57

    (8) variable1 -> DCL ID PUNTOCOMA .

    DCL             reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    ENCASO          reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    REPITA          reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    DESDE           reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    LLAMAR          reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    ALEATORIO       reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    MOVER           reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    INC             reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    DEC             reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    INI             reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)
    FIN             reduce using rule 8 (variable1 -> DCL ID PUNTOCOMA .)


state 58

    (9) variable2 -> DCL ID DEFAULT . NUMERO PUNTOCOMA

    NUMERO          shift and go to state 90


state 59

    (17) condicion1 -> ENCASO cond1Aux1 FINENCASO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 91


state 60

    (22) condicion2 -> ENCASO ID cond2Aux1 . FINENCASO PUNTOCOMA

    FINENCASO       shift and go to state 92


state 61

    (23) cond2Aux1 -> cond2Aux2 . SINO LLAVE_IZQ expresion LLAVE_DER

    SINO            shift and go to state 93


state 62

    (24) cond2Aux1 -> empty . empty empty empty empty
    (26) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 94

state 63

    (25) cond2Aux2 -> CUANDO . condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (27) condicion -> . IGUAL
    (28) condicion -> . MAYOR
    (29) condicion -> . MENOR
    (30) condicion -> . DIFERENTE
    (31) condicion -> . MAYORIGUAL
    (32) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 96
    MAYOR           shift and go to state 97
    MENOR           shift and go to state 98
    DIFERENTE       shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101

    condicion                      shift and go to state 95

state 64

    (18) cond1Aux1 -> cond1Aux2 SINO . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 102


state 65

    (19) cond1Aux1 -> empty empty . empty empty empty
    (21) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 103

state 66

    (20) cond1Aux2 -> CUANDO ID . condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (27) condicion -> . IGUAL
    (28) condicion -> . MAYOR
    (29) condicion -> . MENOR
    (30) condicion -> . DIFERENTE
    (31) condicion -> . MAYORIGUAL
    (32) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 96
    MAYOR           shift and go to state 97
    MENOR           shift and go to state 98
    DIFERENTE       shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101

    condicion                      shift and go to state 104

state 67

    (35) repita -> REPITA LLAVE_IZQ expresion . LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    LLAVE_DER       shift and go to state 105


state 68

    (36) hacer -> DESDE ID IGUAL . sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 107

state 69

    (64) llamarProc -> LLAMAR ID PARENTESIS_IZQ . parametro PARENTESIS_DER PUNTOCOMA
    (59) parametro -> . ID COMA parametro
    (60) parametro -> . ID empty empty
    (61) parametro -> . NUMERO COMA parametro
    (62) parametro -> . NUMERO empty empty
    (63) parametro -> . empty empty empty
    (65) empty -> .

    ID              shift and go to state 109
    NUMERO          shift and go to state 112
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    parametro                      shift and go to state 110
    empty                          shift and go to state 111

state 70

    (40) Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 113


state 71

    (41) Mover -> MOVER PARENTESIS_IZQ paramMover . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 114


state 72

    (42) paramMover -> AF .

    PARENTESIS_DER  reduce using rule 42 (paramMover -> AF .)


state 73

    (43) paramMover -> F .

    PARENTESIS_DER  reduce using rule 43 (paramMover -> F .)


state 74

    (44) paramMover -> DFA .

    PARENTESIS_DER  reduce using rule 44 (paramMover -> DFA .)


state 75

    (45) paramMover -> IFA .

    PARENTESIS_DER  reduce using rule 45 (paramMover -> IFA .)


state 76

    (46) paramMover -> DFB .

    PARENTESIS_DER  reduce using rule 46 (paramMover -> DFB .)


state 77

    (47) paramMover -> IFB .

    PARENTESIS_DER  reduce using rule 47 (paramMover -> IFB .)


state 78

    (48) paramMover -> A .

    PARENTESIS_DER  reduce using rule 48 (paramMover -> A .)


state 79

    (49) paramMover -> DAA .

    PARENTESIS_DER  reduce using rule 49 (paramMover -> DAA .)


state 80

    (50) paramMover -> IAA .

    PARENTESIS_DER  reduce using rule 50 (paramMover -> IAA .)


state 81

    (51) paramMover -> DAB .

    PARENTESIS_DER  reduce using rule 51 (paramMover -> DAB .)


state 82

    (52) paramMover -> IAB .

    PARENTESIS_DER  reduce using rule 52 (paramMover -> IAB .)


state 83

    (53) paramMover -> AA .

    PARENTESIS_DER  reduce using rule 53 (paramMover -> AA .)


state 84

    (54) funcionAlge -> INC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 115


state 85

    (55) funcionAlge -> DEC PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 116


state 86

    (56) funcionAlge -> INI PARENTESIS_IZQ ID . COMA sentencia PARENTESIS_DER PUNTOCOMA

    COMA            shift and go to state 117


state 87

    (2) code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento .

    $end            reduce using rule 2 (code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento .)


state 88

    (57) procedimiento -> PROC . ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    ID              shift and go to state 118


state 89

    (58) procedimiento -> empty . empty empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 119

state 90

    (9) variable2 -> DCL ID DEFAULT NUMERO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 120


state 91

    (17) condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .

    ENCASO          reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    REPITA          reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    DESDE           reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    LLAMAR          reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    ALEATORIO       reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    MOVER           reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    INC             reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    DEC             reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    INI             reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    FIN             reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    LLAVE_DER       reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)
    FINPROC         reduce using rule 17 (condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA .)


state 92

    (22) condicion2 -> ENCASO ID cond2Aux1 FINENCASO . PUNTOCOMA

    PUNTOCOMA       shift and go to state 121


state 93

    (23) cond2Aux1 -> cond2Aux2 SINO . LLAVE_IZQ expresion LLAVE_DER

    LLAVE_IZQ       shift and go to state 122


state 94

    (24) cond2Aux1 -> empty empty . empty empty empty
    (26) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 123

state 95

    (25) cond2Aux2 -> CUANDO condicion . sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 124

state 96

    (27) condicion -> IGUAL .

    ID              reduce using rule 27 (condicion -> IGUAL .)
    NUMERO          reduce using rule 27 (condicion -> IGUAL .)


state 97

    (28) condicion -> MAYOR .

    ID              reduce using rule 28 (condicion -> MAYOR .)
    NUMERO          reduce using rule 28 (condicion -> MAYOR .)


state 98

    (29) condicion -> MENOR .

    ID              reduce using rule 29 (condicion -> MENOR .)
    NUMERO          reduce using rule 29 (condicion -> MENOR .)


state 99

    (30) condicion -> DIFERENTE .

    ID              reduce using rule 30 (condicion -> DIFERENTE .)
    NUMERO          reduce using rule 30 (condicion -> DIFERENTE .)


state 100

    (31) condicion -> MAYORIGUAL .

    ID              reduce using rule 31 (condicion -> MAYORIGUAL .)
    NUMERO          reduce using rule 31 (condicion -> MAYORIGUAL .)


state 101

    (32) condicion -> MENORIGUAL .

    ID              reduce using rule 32 (condicion -> MENORIGUAL .)
    NUMERO          reduce using rule 32 (condicion -> MENORIGUAL .)


state 102

    (18) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ . expresion LLAVE_DER
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 125
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 103

    (19) cond1Aux1 -> empty empty empty . empty empty
    (21) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 126

state 104

    (20) cond1Aux2 -> CUANDO ID condicion . sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 127

state 105

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER . HASTAENCONTRAR ID condicion sentencia PUNTOCOMA

    HASTAENCONTRAR  shift and go to state 128


state 106

    (33) sentencia -> ID .

    HASTA           reduce using rule 33 (sentencia -> ID .)
    ENTONS          reduce using rule 33 (sentencia -> ID .)
    PARENTESIS_DER  reduce using rule 33 (sentencia -> ID .)
    HAGA            reduce using rule 33 (sentencia -> ID .)
    PUNTOCOMA       reduce using rule 33 (sentencia -> ID .)


state 107

    (36) hacer -> DESDE ID IGUAL sentencia . HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    HASTA           shift and go to state 129


state 108

    (34) sentencia -> NUMERO .

    HASTA           reduce using rule 34 (sentencia -> NUMERO .)
    ENTONS          reduce using rule 34 (sentencia -> NUMERO .)
    PARENTESIS_DER  reduce using rule 34 (sentencia -> NUMERO .)
    HAGA            reduce using rule 34 (sentencia -> NUMERO .)
    PUNTOCOMA       reduce using rule 34 (sentencia -> NUMERO .)


state 109

    (59) parametro -> ID . COMA parametro
    (60) parametro -> ID . empty empty
    (65) empty -> .

    COMA            shift and go to state 130
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 131

state 110

    (64) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 132


state 111

    (63) parametro -> empty . empty empty
    (65) empty -> .

    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 133

state 112

    (61) parametro -> NUMERO . COMA parametro
    (62) parametro -> NUMERO . empty empty
    (65) empty -> .

    COMA            shift and go to state 134
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 135

state 113

    (40) Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 40 (Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA .)


state 114

    (41) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 136


state 115

    (54) funcionAlge -> INC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 137

state 116

    (55) funcionAlge -> DEC PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 138

state 117

    (56) funcionAlge -> INI PARENTESIS_IZQ ID COMA . sentencia PARENTESIS_DER PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 139

state 118

    (57) procedimiento -> PROC ID . PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    PARENTESIS_IZQ  shift and go to state 140


state 119

    (58) procedimiento -> empty empty . empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 141

state 120

    (9) variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .

    DCL             reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    ENCASO          reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    REPITA          reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    DESDE           reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    LLAMAR          reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    ALEATORIO       reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    MOVER           reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    INC             reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    DEC             reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    INI             reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)
    FIN             reduce using rule 9 (variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA .)


state 121

    (22) condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .

    ENCASO          reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    REPITA          reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    DESDE           reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    LLAMAR          reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    ALEATORIO       reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    MOVER           reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    INC             reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    DEC             reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    INI             reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    FIN             reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    LLAVE_DER       reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)
    FINPROC         reduce using rule 22 (condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA .)


state 122

    (23) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ . expresion LLAVE_DER
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 142
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 123

    (24) cond2Aux1 -> empty empty empty . empty empty
    (26) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 143

state 124

    (25) cond2Aux2 -> CUANDO condicion sentencia . ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    ENTONS          shift and go to state 144


state 125

    (18) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 145


state 126

    (19) cond1Aux1 -> empty empty empty empty . empty
    (21) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 146

state 127

    (20) cond1Aux2 -> CUANDO ID condicion sentencia . ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    ENTONS          shift and go to state 147


state 128

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR . ID condicion sentencia PUNTOCOMA

    ID              shift and go to state 148


state 129

    (36) hacer -> DESDE ID IGUAL sentencia HASTA . sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 149

state 130

    (59) parametro -> ID COMA . parametro
    (59) parametro -> . ID COMA parametro
    (60) parametro -> . ID empty empty
    (61) parametro -> . NUMERO COMA parametro
    (62) parametro -> . NUMERO empty empty
    (63) parametro -> . empty empty empty
    (65) empty -> .

    ID              shift and go to state 109
    NUMERO          shift and go to state 112
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    parametro                      shift and go to state 150
    empty                          shift and go to state 111

state 131

    (60) parametro -> ID empty . empty
    (65) empty -> .

    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 151

state 132

    (64) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 152


state 133

    (63) parametro -> empty empty . empty
    (65) empty -> .

    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 153

state 134

    (61) parametro -> NUMERO COMA . parametro
    (59) parametro -> . ID COMA parametro
    (60) parametro -> . ID empty empty
    (61) parametro -> . NUMERO COMA parametro
    (62) parametro -> . NUMERO empty empty
    (63) parametro -> . empty empty empty
    (65) empty -> .

    ID              shift and go to state 109
    NUMERO          shift and go to state 112
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    parametro                      shift and go to state 154
    empty                          shift and go to state 111

state 135

    (62) parametro -> NUMERO empty . empty
    (65) empty -> .

    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    empty                          shift and go to state 155

state 136

    (41) Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 41 (Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA .)


state 137

    (54) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 156


state 138

    (55) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 157


state 139

    (56) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia . PARENTESIS_DER PUNTOCOMA

    PARENTESIS_DER  shift and go to state 158


state 140

    (57) procedimiento -> PROC ID PARENTESIS_IZQ . parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
    (59) parametro -> . ID COMA parametro
    (60) parametro -> . ID empty empty
    (61) parametro -> . NUMERO COMA parametro
    (62) parametro -> . NUMERO empty empty
    (63) parametro -> . empty empty empty
    (65) empty -> .

    ID              shift and go to state 109
    NUMERO          shift and go to state 112
    PARENTESIS_DER  reduce using rule 65 (empty -> .)

    parametro                      shift and go to state 159
    empty                          shift and go to state 111

state 141

    (58) procedimiento -> empty empty empty . empty empty empty empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 160

state 142

    (23) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion . LLAVE_DER

    LLAVE_DER       shift and go to state 161


state 143

    (24) cond2Aux1 -> empty empty empty empty . empty
    (26) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 65 (empty -> .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 162

state 144

    (25) cond2Aux2 -> CUANDO condicion sentencia ENTONS . LLAVE_IZQ expresion LLAVE_DER cond2Aux2

    LLAVE_IZQ       shift and go to state 163


state 145

    (18) cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .

    FINENCASO       reduce using rule 18 (cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .)


state 146

    (19) cond1Aux1 -> empty empty empty empty empty .
    (21) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 19 (cond1Aux1 -> empty empty empty empty empty .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 164

state 147

    (20) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS . LLAVE_IZQ expresion LLAVE_DER cond1Aux2

    LLAVE_IZQ       shift and go to state 165


state 148

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID . condicion sentencia PUNTOCOMA
    (27) condicion -> . IGUAL
    (28) condicion -> . MAYOR
    (29) condicion -> . MENOR
    (30) condicion -> . DIFERENTE
    (31) condicion -> . MAYORIGUAL
    (32) condicion -> . MENORIGUAL

    IGUAL           shift and go to state 96
    MAYOR           shift and go to state 97
    MENOR           shift and go to state 98
    DIFERENTE       shift and go to state 99
    MAYORIGUAL      shift and go to state 100
    MENORIGUAL      shift and go to state 101

    condicion                      shift and go to state 166

state 149

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia . HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    HAGA            shift and go to state 167


state 150

    (59) parametro -> ID COMA parametro .

    PARENTESIS_DER  reduce using rule 59 (parametro -> ID COMA parametro .)


state 151

    (60) parametro -> ID empty empty .

    PARENTESIS_DER  reduce using rule 60 (parametro -> ID empty empty .)


state 152

    (64) llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 64 (llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA .)


state 153

    (63) parametro -> empty empty empty .

    PARENTESIS_DER  reduce using rule 63 (parametro -> empty empty empty .)


state 154

    (61) parametro -> NUMERO COMA parametro .

    PARENTESIS_DER  reduce using rule 61 (parametro -> NUMERO COMA parametro .)


state 155

    (62) parametro -> NUMERO empty empty .

    PARENTESIS_DER  reduce using rule 62 (parametro -> NUMERO empty empty .)


state 156

    (54) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 168


state 157

    (55) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 169


state 158

    (56) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 170


state 159

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro . PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    PARENTESIS_DER  shift and go to state 171


state 160

    (58) procedimiento -> empty empty empty empty . empty empty empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 172

state 161

    (23) cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .

    FINENCASO       reduce using rule 23 (cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER .)


state 162

    (24) cond2Aux1 -> empty empty empty empty empty .
    (26) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (65) empty -> .

    FINENCASO       reduce using rule 24 (cond2Aux1 -> empty empty empty empty empty .)
    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 173

state 163

    (25) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ . expresion LLAVE_DER cond2Aux2
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 174
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 164

    (21) cond1Aux2 -> empty empty empty empty empty empty . empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 175

state 165

    (20) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ . expresion LLAVE_DER cond1Aux2
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 176
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 166

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion . sentencia PUNTOCOMA
    (33) sentencia -> . ID
    (34) sentencia -> . NUMERO

    ID              shift and go to state 106
    NUMERO          shift and go to state 108

    sentencia                      shift and go to state 177

state 167

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA . LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA

    LLAVE_IZQ       shift and go to state 178


state 168

    (54) funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 54 (funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 169

    (55) funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 55 (funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 170

    (56) funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .

    ENCASO          reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    REPITA          reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DESDE           reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAMAR          reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    ALEATORIO       reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    MOVER           reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INC             reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    DEC             reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    INI             reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FIN             reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    LLAVE_DER       reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)
    FINPROC         reduce using rule 56 (funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA .)


state 171

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER . INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    INICIOPROC      shift and go to state 179


state 172

    (58) procedimiento -> empty empty empty empty empty . empty empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 180

state 173

    (26) cond2Aux2 -> empty empty empty empty empty empty . empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 181

state 174

    (25) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion . LLAVE_DER cond2Aux2

    LLAVE_DER       shift and go to state 182


state 175

    (21) cond1Aux2 -> empty empty empty empty empty empty empty . empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 183

state 176

    (20) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion . LLAVE_DER cond1Aux2

    LLAVE_DER       shift and go to state 184


state 177

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia . PUNTOCOMA

    PUNTOCOMA       shift and go to state 185


state 178

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ . expresion LLAVE_DER FINDESDE PUNTOCOMA
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    LLAVE_DER       reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 186
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 179

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC . DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento

    DOSPUNTOS       shift and go to state 187


state 180

    (58) procedimiento -> empty empty empty empty empty empty . empty empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 188

state 181

    (26) cond2Aux2 -> empty empty empty empty empty empty empty . empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 189

state 182

    (25) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER . cond2Aux2
    (25) cond2Aux2 -> . CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2
    (26) cond2Aux2 -> . empty empty empty empty empty empty empty empty
    (65) empty -> .

    CUANDO          shift and go to state 63
    SINO            reduce using rule 65 (empty -> .)

    cond2Aux2                      shift and go to state 190
    empty                          shift and go to state 191

state 183

    (21) cond1Aux2 -> empty empty empty empty empty empty empty empty . empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 192

state 184

    (20) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER . cond1Aux2
    (20) cond1Aux2 -> . CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2
    (21) cond1Aux2 -> . empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    CUANDO          shift and go to state 46
    SINO            reduce using rule 65 (empty -> .)

    cond1Aux2                      shift and go to state 193
    empty                          shift and go to state 194

state 185

    (35) repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .

    ENCASO          reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    REPITA          reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    DESDE           reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    LLAMAR          reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    ALEATORIO       reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    MOVER           reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    INC             reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    DEC             reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    INI             reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    FIN             reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    LLAVE_DER       reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)
    FINPROC         reduce using rule 35 (repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA .)


state 186

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion . LLAVE_DER FINDESDE PUNTOCOMA

    LLAVE_DER       shift and go to state 195


state 187

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS . expresion FINPROC PUNTOCOMA procedimiento
    (10) expresion -> . condicion1 expresion
    (11) expresion -> . condicion2 expresion
    (12) expresion -> . repita expresion
    (13) expresion -> . hacer expresion
    (14) expresion -> . funcion expresion
    (15) expresion -> . llamarProc expresion
    (16) expresion -> . empty empty
    (17) condicion1 -> . ENCASO cond1Aux1 FINENCASO PUNTOCOMA
    (22) condicion2 -> . ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA
    (35) repita -> . REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA
    (36) hacer -> . DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA
    (37) funcion -> . Aleatorio
    (38) funcion -> . Mover
    (39) funcion -> . funcionAlge
    (64) llamarProc -> . LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA
    (65) empty -> .
    (40) Aleatorio -> . ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA
    (41) Mover -> . MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA
    (54) funcionAlge -> . INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (55) funcionAlge -> . DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA
    (56) funcionAlge -> . INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA

    ENCASO          shift and go to state 18
    REPITA          shift and go to state 19
    DESDE           shift and go to state 20
    LLAMAR          shift and go to state 24
    FINPROC         reduce using rule 65 (empty -> .)
    ALEATORIO       shift and go to state 25
    MOVER           shift and go to state 26
    INC             shift and go to state 27
    DEC             shift and go to state 28
    INI             shift and go to state 29

    expresion                      shift and go to state 196
    condicion1                     shift and go to state 11
    condicion2                     shift and go to state 12
    repita                         shift and go to state 13
    hacer                          shift and go to state 14
    funcion                        shift and go to state 15
    llamarProc                     shift and go to state 16
    empty                          shift and go to state 35
    Aleatorio                      shift and go to state 21
    Mover                          shift and go to state 22
    funcionAlge                    shift and go to state 23

state 188

    (58) procedimiento -> empty empty empty empty empty empty empty . empty empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 197

state 189

    (26) cond2Aux2 -> empty empty empty empty empty empty empty empty .

    SINO            reduce using rule 26 (cond2Aux2 -> empty empty empty empty empty empty empty empty .)


state 190

    (25) cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .

    SINO            reduce using rule 25 (cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2 .)


state 191

    (26) cond2Aux2 -> empty . empty empty empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 198

state 192

    (21) cond1Aux2 -> empty empty empty empty empty empty empty empty empty .

    SINO            reduce using rule 21 (cond1Aux2 -> empty empty empty empty empty empty empty empty empty .)


state 193

    (20) cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .

    SINO            reduce using rule 20 (cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2 .)


state 194

    (21) cond1Aux2 -> empty . empty empty empty empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 199

state 195

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER . FINDESDE PUNTOCOMA

    FINDESDE        shift and go to state 200


state 196

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion . FINPROC PUNTOCOMA procedimiento

    FINPROC         shift and go to state 201


state 197

    (58) procedimiento -> empty empty empty empty empty empty empty empty . empty empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 202

state 198

    (26) cond2Aux2 -> empty empty . empty empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 203

state 199

    (21) cond1Aux2 -> empty empty . empty empty empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 204

state 200

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 205


state 201

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC . PUNTOCOMA procedimiento

    PUNTOCOMA       shift and go to state 206


state 202

    (58) procedimiento -> empty empty empty empty empty empty empty empty empty . empty empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 207

state 203

    (26) cond2Aux2 -> empty empty empty . empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 208

state 204

    (21) cond1Aux2 -> empty empty empty . empty empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 209

state 205

    (36) hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .

    ENCASO          reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    REPITA          reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    DESDE           reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    LLAMAR          reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    ALEATORIO       reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    MOVER           reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    INC             reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    DEC             reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    INI             reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    FIN             reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    LLAVE_DER       reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)
    FINPROC         reduce using rule 36 (hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA .)


state 206

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA . procedimiento
    (57) procedimiento -> . PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento
    (58) procedimiento -> . empty empty empty empty empty empty empty empty empty empty empty
    (65) empty -> .

    PROC            shift and go to state 88
    $end            reduce using rule 65 (empty -> .)

    procedimiento                  shift and go to state 210
    empty                          shift and go to state 89

state 207

    (58) procedimiento -> empty empty empty empty empty empty empty empty empty empty . empty
    (65) empty -> .

    $end            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 211

state 208

    (26) cond2Aux2 -> empty empty empty empty . empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 212

state 209

    (21) cond1Aux2 -> empty empty empty empty . empty empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 213

state 210

    (57) procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento .

    $end            reduce using rule 57 (procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento .)


state 211

    (58) procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .

    $end            reduce using rule 58 (procedimiento -> empty empty empty empty empty empty empty empty empty empty empty .)


state 212

    (26) cond2Aux2 -> empty empty empty empty empty . empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 173

state 213

    (21) cond1Aux2 -> empty empty empty empty empty . empty empty empty empty
    (65) empty -> .

    SINO            reduce using rule 65 (empty -> .)

    empty                          shift and go to state 164
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 33 resolved using rule (variable -> empty empty)
WARNING: rejected rule (expresion -> empty empty) in state 33
